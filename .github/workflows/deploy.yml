name: Deploy to EC2 on Push

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy via SSH to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Install Angular dependencies
        working-directory: front-end
        run: npm ci

      - name: Build Angular app
        working-directory: front-end
        run: |
          export NODE_OPTIONS=--openssl-legacy-provide
          npm run build -- --configuration production                    

      - name: Deploy files using rsync
        run: |
          rsync -avz \
          --exclude '.git' \
          --exclude 'node_modules' \
          --exclude 'front-end/node_modules' \
          --exclude 'back-end|node_modules' \
          -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa" \
          ./ ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/festival-expense-tracker
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          timeout: 60m
          command_timeout: 30m
          script: |
            cd /home/ubuntu/festival-expense-tracker/back-end
            echo "PORT=3000" > .env
            echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            cd /home/ubuntu/festival-expense-tracker
            docker-compose down
            docker-compose up -d --build
